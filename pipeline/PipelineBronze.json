{
	"name": "PipelineBronze",
	"properties": {
		"description": "Está pensado para procesar los diferentes elementos de un mismo origen; por ejemplo, de una misma bdd SQL Server",
		"activities": [
			{
				"name": "LookupOrigins",
				"description": "Selecciona de la tabla de orígenes el elemento  que se va a procesar en función del valor del parámetro origen",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT ORIGINNAME\nFROM dbo.DATAORIGINS\nWHERE ORIGINID BETWEEN @{pipeline().parameters.origen1}\nAND\n@{pipeline().parameters.origen2}",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "AzureSqlTestGen",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachOrigin",
				"description": "Procesa los movimientos de datos del elemento origen o de los elementos origen si hay que procesar más de uno en el mismo pipeline",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupOrigins",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupOrigins').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyOriginToBronze",
							"description": "Copia el elemento de origen dado a la zona Bronze (raw data)",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "NotebookDQ",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT TOP (1000) * FROM @{item().ORIGINNAME}",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"maxConcurrentConnections": 2
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".taka"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTestGen",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DelimitedPruebaCatalog",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "NotebookDQ",
							"description": "Aplica la calidad de datos definida en la bdd",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/alaloumet@encamina.com/NotebookDQ"
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"origen1": {
				"type": "int",
				"defaultValue": 1
			},
			"origen2": {
				"type": "int",
				"defaultValue": 2
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}