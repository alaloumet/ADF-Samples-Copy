{
	"name": "pipelineException",
	"properties": {
		"description": "Una pipeline b√°sica con movimiento de datos y control de errores",
		"activities": [
			{
				"name": "CopiaDesdePostgres_a_CSV",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlSource"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"quoteAllText": true
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "col1",
									"type": "Int32"
								},
								"sink": {
									"path": "$['col1']"
								}
							},
							{
								"source": {
									"name": "col2",
									"type": "String"
								},
								"sink": {
									"path": "$['col2']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "DataSetPostgreSqlTablaPruebaADF",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DataSetJsonEjemplo",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CopiaDesdePostgres_a_CSV",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('CopiaDesdePostgres_a_CSV').Error.ErrorCode, '2200')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 10
							}
						}
					]
				}
			}
		],
		"parameters": {
			"EmailTo": {
				"type": "string",
				"defaultValue": "alaloumet@encamina.com"
			}
		},
		"folder": {
			"name": "Ejemplos"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}