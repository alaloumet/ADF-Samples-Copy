{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-Lalo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PruebaOnPremParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extrae de SQL On Prem, Carga en Azire Blob Storage, Transforma y deja el Resultado en SQL Azure",
				"activities": [
					{
						"name": "ExtraeSqlOnPrem",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OriginAirportCode",
											"type": "String"
										},
										"sink": {
											"name": "OriginAirportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "Int32"
										},
										"sink": {
											"name": "Month",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DayofMonth",
											"type": "Int32"
										},
										"sink": {
											"name": "DayofMonth",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CRSDepHour",
											"type": "Int32"
										},
										"sink": {
											"name": "CRSDepHour",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DayOfWeek",
											"type": "Int32"
										},
										"sink": {
											"name": "DayOfWeek",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Carrier",
											"type": "String"
										},
										"sink": {
											"name": "Carrier",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DestAirportCode",
											"type": "String"
										},
										"sink": {
											"name": "DestAirportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DepDel15",
											"type": "Int32"
										},
										"sink": {
											"name": "DepDel15",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WindSpeed",
											"type": "Int32"
										},
										"sink": {
											"name": "WindSpeed",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SeaLevelPressure",
											"type": "Int32"
										},
										"sink": {
											"name": "SeaLevelPressure",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "HourlyPrecip",
											"type": "Int32"
										},
										"sink": {
											"name": "HourlyPrecip",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataSetSqlServerTablaVuelosMeteo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetBlobStorageParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflowELT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ExtraeSqlOnPrem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowELT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceDataFlowELT": {},
									"sinkELT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/escenarioDatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Una pipeline básica con movimiento de datos y control de errores",
				"activities": [
					{
						"name": "CopiaDesdePostgres_a_CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "col1",
											"type": "Int32"
										},
										"sink": {
											"path": "$['col1']"
										}
									},
									{
										"source": {
											"name": "col2",
											"type": "String"
										},
										"sink": {
											"path": "$['col2']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataSetPostgreSqlTablaPruebaADF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetJsonEjemplo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EnviaErrorCod",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopiaDesdePostgres_a_CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-121.westeurope.logic.azure.com:443/workflows/8b7aa1d884194896b1b6d528ee00bfc0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=u6FkvnKklvyXHTEbodKeBGDOue2m8CCcCpPguo-Nkro",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"ErrorMessage": "  -- ERROR codificando usuarios --  ",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					},
					{
						"name": "EnviaCodCopy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopiaDesdePostgres_a_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-121.westeurope.logic.azure.com:443/workflows/8b7aa1d884194896b1b6d528ee00bfc0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=u6FkvnKklvyXHTEbodKeBGDOue2m8CCcCpPguo-Nkro",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"ErrorMessage": "  -- Copia OK--  ",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					},
					{
						"name": "NotebookPruebaDatabricks",
						"description": "Quita una columna al fichero de entrada y lo graba como una tabla",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "EnviaCodCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/alaloumet@encamina.com/pruebas"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "alaloumet@encamina.com"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/escenarioSimple')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Una pipeline básica con movimiento de datos y control de errores",
				"activities": [
					{
						"name": "CopiaDesdePostgres_a_CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "col1",
											"type": "Int32"
										},
										"sink": {
											"path": "$['col1']"
										}
									},
									{
										"source": {
											"name": "col2",
											"type": "String"
										},
										"sink": {
											"path": "$['col2']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataSetPostgreSqlTablaPruebaADF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetJsonEjemplo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EnviaErrorCod",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopiaDesdePostgres_a_CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-121.westeurope.logic.azure.com:443/workflows/8b7aa1d884194896b1b6d528ee00bfc0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=u6FkvnKklvyXHTEbodKeBGDOue2m8CCcCpPguo-Nkro",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"ErrorMessage": "  -- Codigo de Error: @{activity('CopiaDesdePostgres_a_CSV').Error.ErrorCode} ",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					},
					{
						"name": "EnviaCodCopy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopiaDesdePostgres_a_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-121.westeurope.logic.azure.com:443/workflows/8b7aa1d884194896b1b6d528ee00bfc0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=u6FkvnKklvyXHTEbodKeBGDOue2m8CCcCpPguo-Nkro",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"ErrorMessage": "  -- Copia OK--",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "alaloumet@encamina.com"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExcel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Excel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OdbcSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OdbcExcelMSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1Gen",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCogerValorPersistidoVariable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AsiganamosValorPersistidoEnVariable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CogemosValorPersistido",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "a",
							"value": {
								"value": "@activity('CogemosValorPersistido').output.firstRow.vari",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CogemosValorPersistido",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"dataset": {
								"referenceName": "SqlServerTablePersistVar",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "EvaluamosValorVariable",
						"description": "Si el Valor de la variable es 'A' , la cambiamos a 'X'",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "AsiganamosValorPersistidoEnVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('a'),'A')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "a",
										"value": {
											"value": "X",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CambiamosValorX",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "a",
										"value": {
											"value": "'B'",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CambiamosValorX",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource"
										},
										"sink": {
											"type": "SqlServerSink",
											"preCopyScript": {
												"value": "update dbo.persistVar set vari = @{variables('a')}",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "vari",
														"type": "String"
													},
													"sink": {
														"name": "vari",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTablePersistVar",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTablePersistVar",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"a": {
						"type": "String",
						"defaultValue": "Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineException')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Una pipeline básica con movimiento de datos y control de errores",
				"activities": [
					{
						"name": "CopiaDesdePostgres_a_CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "col1",
											"type": "Int32"
										},
										"sink": {
											"path": "$['col1']"
										}
									},
									{
										"source": {
											"name": "col2",
											"type": "String"
										},
										"sink": {
											"path": "$['col2']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataSetPostgreSqlTablaPruebaADF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataSetJsonEjemplo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CopiaDesdePostgres_a_CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('CopiaDesdePostgres_a_CSV').Error.ErrorCode, '2200')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							]
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "alaloumet@encamina.com"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinePruebaWindow1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pruebaWindow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "pruebaWindow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceDataFlowELT": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinePruebaWindow2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pruebaWindow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "pruebaWindow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinepRUEBAeVOLUCIONeSQUEMA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pruebaEvolucionEsquema",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "pruebaEvolucionEsquema",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		}
	]
}