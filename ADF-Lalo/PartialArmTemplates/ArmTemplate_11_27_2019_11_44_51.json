{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-Lalo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PipelineBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Está pensado para procesar los diferentes elementos de un mismo origen; por ejemplo, de una misma bdd SQL Server",
				"activities": [
					{
						"name": "LookupOrigins",
						"description": "Selecciona de la tabla de orígenes el elemento  que se va a procesar en función del valor del parámetro origen",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ORIGINNAME\nFROM dbo.DATAORIGINS\nWHERE ORIGINID BETWEEN @{pipeline().parameters.origen1}\nAND\n@{pipeline().parameters.origen2}"
							},
							"dataset": {
								"referenceName": "AzureSqlTestGen",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOrigin",
						"description": "Procesa los movimientos de datos del elemento origen o de los elementos origen si hay que procesar más de uno en el mismo pipeline",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupOrigins",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupOrigins').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyOriginToBronze",
									"description": "Copia el elemento de origen dado a la zona Bronze (raw data)",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "SELECT TOP (1000) * FROM @{item().ORIGINNAME}"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"maxConcurrentConnections": 2
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".taka"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTestGen",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "FicherosTablasSQLAzure",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"origen1": {
						"type": "int",
						"defaultValue": 1
					},
					"origen2": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedPruebaCatalog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "testOutput",
						"container": "laloblob"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}